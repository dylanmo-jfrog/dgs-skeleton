name: "github-dgs-build"
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'        
          cache: 'maven'
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ENV_1: ${{ secrets.JF_SECRET_ENV_1 }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Run Maven build
        env:
          MVN_VIRTUAL_REPO: default-maven-virtual
          RT_DOCKER_HOST: drobin.jfrog.io
          RT_DOCKER_REGISTRY: default-docker-virtual
          JAR_VERSION: 1.${{ env.JFROG_CLI_BUILD_NUMBER }}.0
          SCAN_WATCHES: webapp-watch
        run: |
          # Collect environment variables for the build
          jf rt bce ${{ env.JFROG_CLI_BUILD_NAME }}-jar ${{ env.JFROG_CLI_BUILD_NUMBER }} 
          jf mvnc --repo-resolve-releases=${{ env.MVN_VIRTUAL_REPO }} \
            --repo-deploy-releases=${{ env.MVN_VIRTUAL_REPO }} \
            --repo-resolve-snapshots=${{ env.MVN_VIRTUAL_REPO }} \
            --repo-deploy-snapshots=${{ env.MVN_VIRTUAL_REPO }}
          jf mvn --build-name=${{ env.JFROG_CLI_BUILD_NAME }}-jar --build-number=${{ env.JFROG_CLI_BUILD_NUMBER }} clean package
          jf rt bag ${{ env.JFROG_CLI_BUILD_NAME }}-jar ${{ env.JFROG_CLI_BUILD_NUMBER }}
          jf scan --watches=${{ env.SCAN_WATCHES }} ./target/dgs-skeleton-${{ env.JAR_VERSION }}.jar
          # if scan is ok publish the JAR_VERSION:

          # Publish build info
          jf rt bp ${{ env.JFROG_CLI_BUILD_NAME }}-jar ${{ env.JFROG_CLI_BUILD_NUMBER }}
